class Gallows {
    field int stage; 
    field int baseX, baseY;

    constructor Gallows new() {
        let baseX = 275;  
        let baseY = 200; 
        let stage = 0;
        do drawBasis();
        return this;
    }

    method void drawNextStage() {
        do Screen.setColor(true);

        // checks current stage
        if (stage = 0) {
            do drawPillar();
        }
        if (stage = 1) {
            do drawCrossbar();
        }
        if (stage = 2) {
            do drawRope();
        }
        if (stage = 3) {
            do drawHead();
        }
        if (stage = 4) {
            do drawBody();
        }
        if (stage = 5) {
            do drawArms();
            do drawLegs();
        }

        let stage = stage + 1;
        return;
    }

    method void drawBasis() {
        do Screen.drawLine(baseX, baseY, baseX + 120, baseY);
        return;
    }

    method void drawPillar() {   
        do Screen.drawLine(baseX, baseY, baseX, baseY - 150);
        return;
    }

    method void drawCrossbar() {  
        do Screen.drawLine(baseX, baseY - 150, baseX + 60, baseY - 150);
        return;
    }

    method void drawRope() {
        do Screen.drawLine(baseX + 60, baseY - 150, baseX + 60, baseY - 110);
        return;
    }

    method void drawHead() {
        do Screen.setColor(true);
        do Screen.drawCircle(baseX + 60, baseY - 110, 10);
        return;
    }

    method void drawBody() {
        do Screen.drawLine(baseX + 60, baseY - 120, baseX + 60,  baseY - 40);
        return;
    }

    method void drawArms() {
        do Screen.drawLine(baseX + 60, baseY - 100, baseX + 35,  baseY - 80);
        do Screen.drawLine(baseX + 60, baseY - 100, baseX + 85,  baseY - 80);
        return;
    }

        method void drawLegs() {
        do Screen.drawLine(baseX + 60,  baseY - 40, baseX + 30,  baseY - 60);
        do Screen.drawLine(baseX + 60, baseY - 40, baseX + 90,  baseY - 60);
        return;
    }
}