class Game {
    field Alphabet alphabet;
    field Gallows gallows;
    field boolean isGameOver;
    field Array words;

    constructor Game new() {
        let isGameOver = false;
        let alphabet = Alphabet.new();

        let words = Array.new(3);
        let words[0] = "CAT";
        let words[1] = "DOG";
        let words[2] = "WOMAN";

        let gallows = Gallows.new();
        return this;
    }

    method void startNewGame() {
        var Array pressedLetters;
        var char ch;
        do alphabet.draw();

        while (~isGameOver) {
            let ch = Keyboard.readChar();
            if (~checkIfCharWasPressed(ch)) {
                let pressedLetters = alphabet.getPressedLetters();
                let pressedLetters[alphabet.getPressedLettersCount()] = ch;
                do alphabet.setPressedLettersCount(alphabet.getPressedLettersCount() + 1);
                if (TryToOpenCharInWord(ch, "CAT")) {
                    // TODO
                } else {
                    do alphabet.crossOutLetter(ch);
                    do gallows.drawNextStage();
                }
            }
        }
        return;
    }

    function boolean won() {
        return false;
    }

    method boolean checkIfCharWasPressed(char ch_) {
        var int i;
        var Letter letter;
        var Array pressedLetters;
        let i = 0;
        while (~(i = 33)) {
            let pressedLetters = alphabet.getPressedLetters();
            let letter = pressedLetters[i];
            if (letter.getLetter() = ch_) {
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    method boolean TryToOpenCharInWord(char ch, String word) {
        var int i;
        var boolean success;
        let i = 0;
        let success = false;
        while (~(i = word.length())) {
            if (word.charAt(i) = ch) {
                let success = true;
                // TODO
            }
            let i = i + 1;
        }
        return success;
    }

    method void dispose() {
        // do Memory.deAlloc(alphabet)
        // do Memory.deAlloc(isGameOver)
        // do Memory.deAlloc(words)
        do Memory.deAlloc(this);
        return;
    }
}