class Alphabet {
    field Array letters;
    field Array pressedLetters;
    field int pressedLettersCount;

    constructor Alphabet new() {
        var int curX, curY, i;
        var String alph;
        let letters = Array.new(26);
        let pressedLetters = Array.new(26);
        let pressedLettersCount = 0;
        let curX = 1;
        let curY = 10;
        let alph = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        let i = 0;
        while (i < 26) {
            let letters[i] = Letter.new(alph.charAt(i), curX, curY);
            if ((i = 9) | (i = 18)) {
                let curY = curY + 2;
                let curX = 1;
            }
            let curX = curX + 1;
            let i = i + 1;
        }
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method Array getPressedLetters() {
        return pressedLetters;
    }

    method int getPressedLettersCount() {
        return pressedLettersCount;
    }

    method void setPressedLettersCount(int count) {
        let pressedLettersCount = count;
        return;
    }

    method void draw() {
        var int i;
        var Letter letter;
        let i = 0;
        while (i < 26) {
            let letter = letters[i];
            do letter.draw();
            let i = i+1;
        }
        return;
    }

    method void reset() {
        var int i;
        var Letter letter;
        let i = 0;
        while (i < 26) {
            let letter = letters[i];
            do letter.erase();
            do letter.draw();
            let i = i+1;
        }
        return;
    }

    method void crossOutLetter(char letter_) {
        var int i;
        var Letter lett;
        let i = 0;
        while (i < 26) {
            let lett = letters[i];
            if (letter_ = lett.getLetter()) {
                do lett.cross();
            }
            let i = i+1;
        }
        return;
    }

}