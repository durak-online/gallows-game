class Alphabet {
    field Array letters;
    field Array pressedLetters;
    field int pressedLettersCount;

    constructor Alphabet new() {
        var int curX, curY, i;
        var String alph;

        let letters = Array.new(26);
        let pressedLetters = Array.new(26);
        let pressedLettersCount = 0;
        let curX = 4;  
        let curY = 12;
        // char codes from 97 to 122 if lower case
        // from 60 to 90 if upper case
        let alph = /*"ABCDEFGHIJKLMNOPQRSTUVWXYZ"*/ "abcdefghijklmnopqrstuvwxyz";

        let i = 0;
        while (i < 26) {
            let letters[i] = Letter.new(alph.charAt(i), alph.charAt(i), curX, curY);
            if ((i = 8) | (i = 17)) {
                let curY = curY + 2;
                let curX = 4;
            }
            else {
                let curX = curX + 2;
            }
            let i = i + 1;
        }
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method Array getPressedLetters() {
        return pressedLetters; 
    }

    method void draw() {
        var int i;
        var Letter letter;

        let i = 0;
        while (i < 26) {
            let letter = letters[i]; 
            do letter.draw();
            let i = i + 1;
        }
        return;
    }

    method void reset() {
        var int i;
        var Letter letter;

        let i = 0;
        while (i < 26) {
            let letter = letters[i];
            do letter.erase();
            do letter.draw();
            let i = i + 1;
        }
        return;
    }

    method void crossOutLetter(int charCode) {
        var int i, codeOfChar;
        var Letter letter;

        let i = 0;
        while (i < 26) {
            let letter = letters[i];
            if (letter.getLetterCode() = charCode) {
                do letter.cross();
            }
            let i = i + 1;
        }
        return;
    }

    method void addPressedLetter(int charCode) {
        let pressedLetters[pressedLettersCount] = charCode;
        let pressedLettersCount = pressedLettersCount + 1;
        return;
    }
}