function Alphabet.new 4
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 26
call Array.new 1
pop this 0
push constant 26
call Array.new 1
pop this 1
push constant 0
pop this 2
push constant 4
pop local 0
push constant 12
pop local 1
push constant 26
call String.new 1
push constant 65
call String.appendChar 2
push constant 66
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 68
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 70
call String.appendChar 2
push constant 71
call String.appendChar 2
push constant 72
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 74
call String.appendChar 2
push constant 75
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 77
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 81
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 84
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 87
call String.appendChar 2
push constant 88
call String.appendChar 2
push constant 89
call String.appendChar 2
push constant 90
call String.appendChar 2
pop local 3
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 26
lt
not
if-goto WHILE_END0
push local 2
push this 0
add
push local 3
push local 2
call String.charAt 2
push local 3
push local 2
call String.charAt 2
push local 0
push local 1
call Letter.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 8
eq
push local 2
push constant 17
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 2
add
pop local 1
push constant 4
pop local 0
goto IF_END0
label IF_FALSE0
push local 0
push constant 2
add
pop local 0
label IF_END0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Alphabet.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Alphabet.getPressedLetters 0
push argument 0
pop pointer 0
push this 1
return
function Alphabet.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 26
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Letter.draw 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Alphabet.crossOutLetter 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 26
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Letter.getLetterCode 1
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call Letter.cross 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Alphabet.addPressedLetter 0
push argument 0
pop pointer 0
push this 2
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
